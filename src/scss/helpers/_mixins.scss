@use "../helpers/_variables.scss" as *;
@mixin family($name) {
    @if($name == "title"){
        font-family: $default-title, sans-serif;
        font-weight: normal;
        &:lang(en){
            font-family: $en-title, sans-serif;
        }
        &:lang(ru){
            font-family: $ru-title, sans-serif;
        }
        &:lang(ka),&:lang(ge){
            font-family: $ge-title, sans-serif;
        }
    }
    //@if($name == "title-text"){
    //    font-family: $default-title-text, sans-serif;
    //
    //    &:lang(en){
    //        font-family: $en-title-text, sans-serif;
    //    }
    //    &:lang(ru){
    //        font-family: $ru-title-text, sans-serif;
    //    }
    //    &:lang(ka),&:lang(ge){
    //        font-family: $ge-title-text, sans-serif;
    //    }
    //}
    @if($name == "text"){
        font-family: $default-text, sans-serif;

        &:lang(en){
            font-family: $en-text, sans-serif;
        }
        &:lang(ru){
            font-family: $ru-text, sans-serif;
        }
        &:lang(ka),&:lang(ge){
            font-family: $ge-text, sans-serif;
        }
    }
}
@mixin fs($en,$ka: $en, $ru:$en) {
    font-size: $en;
    &:lang(en){
        font-size: $en;
    }
    &:lang(ru){
        font-size: $ru;
    }
    &:lang(ka),&:lang(ge){
        font-size: $ka;
    }
}
@mixin multitruncate($font-size, $line-height, $lines-to-show, $excerpt-bg: transparent) {
    background: $excerpt-bg;
    display: block; /* Fallback for non-webkit */
    display: -webkit-box;
    max-height: ($font-size+1)*$line-height*$lines-to-show; /* Fallback for non-webkit */
    font-size: $font-size;
    line-height: $line-height;
    -webkit-line-clamp: $lines-to-show;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    @-moz-document url-prefix() {
        overflow: hidden;
        position: relative;
        &:before {
            background: $excerpt-bg;
            bottom: 0;
            position: absolute;
            right: 0;
            float: right;
            content: '\2026';
            margin-left: -3rem;
            width: 3rem;
        }
        &:after {
            content: '';
            background: $excerpt-bg;
            position: absolute;
            height: 50px;
            width: 100%;
            z-index: 1;
        }
    }
}
@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
        "outdated-browser",
        "modal",
        "site-header",
        "page-wrapper",
        "site-footer"
);

// mixin for responsive
//usage example:
//.site-header {
//    padding: 2rem;
//    font-size: 1.8rem;
//    @include mq('tablet-wide') {
//        padding-top: 4rem;
//        font-size: 2.4rem;
//    }
//}
$breakpoints: (
        "phone":          400px,
        "phone-wide":     480px,
        "phablet":        560px,
        "tablet-small":   640px,
        "tablet":         768px,
        "tablet-medium":  992px,
        "tablet-wide":    1024px,
        "desktop-small":  1200px,
        "desktop":        1248px,
        "desktop-medium": 1287px,
        "desktop-hd":     1440px,
        "desktop-wide":   1921px
);
@mixin mq($width, $type: max) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin size($w,$h:$w){
    width: $w;
    height: $h;
}

/* Helper Function */
$base-parallax-perspective: 8px;



// double border
@mixin double-border($color){
    &:before{
        content: "";
        width: calc(100% + 5px);
        height: 100%;
        display: block;
        position: absolute;
        left: -20px;
        top: -3px;
        border: 1px solid $color;
        padding: 0 12px;
        transition: $def-time;
        pointer-events: none;
    }
    &:after{
        content: "";
        width: calc(100% + 5px);
        height: 100%;
        display: block;
        position: absolute;
        left: -17px;
        top: 0;
        border: 1px solid $color;
        padding: 0 12px;
        transition: $def-time;
        pointer-events: none;
    }
}